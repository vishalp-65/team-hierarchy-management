name: CI/CD_Pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  build-test-deploy:
    runs-on: self-hosted  # Ensure Docker is installed on your self-hosted runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Docker registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Create and populate .env file from secret
      run: |
        touch .env
        echo -e "${{ secrets.PROD_ENV_FILE }}" > .env

    - name: Build Docker image
      run: |
        docker build -t task_management_backend:latest .

    - name: Run tests in Docker container
      run: |
        docker run --rm --env-file .env task_management_backend:latest npm test
      continue-on-error: false  # Stop if tests fail

    - name: Push Docker image to registry
      if: success()  # Only push if tests pass
      run: |
        docker tag task_management_backend:latest ghcr.io/${{ github.repository }}/task_management_backend:latest
        docker push ghcr.io/${{ github.repository }}/task_management_backend:latest

    - name: Clean up old container
      if: always()  # Always attempt to clean up, regardless of success/failure
      run: |
        docker stop task_management_backend_container || true
        docker rm task_management_backend_container || true

    - name: Deploy application
      if: success()  # Only deploy if tests pass
      run: |
        docker run -d -p 8082:8082 -p 8083:8083 \
          --env-file .env \
          --name task_management_backend_container \
          ghcr.io/${{ github.repository }}/task_management_backend:latest
